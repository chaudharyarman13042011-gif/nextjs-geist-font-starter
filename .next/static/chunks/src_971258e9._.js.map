{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/games/ChessGame.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { cn } from \"@/lib/utils\";\n\ntype PieceType = \"king\" | \"queen\" | \"rook\" | \"bishop\" | \"knight\" | \"pawn\";\ntype PieceColor = \"white\" | \"black\";\n\ninterface ChessPiece {\n  type: PieceType;\n  color: PieceColor;\n}\n\ntype Board = (ChessPiece | null)[][];\ntype Position = { row: number; col: number };\n\nconst PIECE_SYMBOLS: Record<PieceColor, Record<PieceType, string>> = {\n  white: {\n    king: \"♔\",\n    queen: \"♕\",\n    rook: \"♖\",\n    bishop: \"♗\",\n    knight: \"♘\",\n    pawn: \"♙\"\n  },\n  black: {\n    king: \"♚\",\n    queen: \"♛\",\n    rook: \"♜\",\n    bishop: \"♝\",\n    knight: \"♞\",\n    pawn: \"♟\"\n  }\n};\n\nconst createInitialBoard = (): Board => {\n  const board: Board = Array(8).fill(null).map(() => Array(8).fill(null));\n  \n  // Place black pieces\n  const blackPieces: PieceType[] = [\"rook\", \"knight\", \"bishop\", \"queen\", \"king\", \"bishop\", \"knight\", \"rook\"];\n  blackPieces.forEach((piece, col) => {\n    board[0][col] = { type: piece, color: \"black\" };\n  });\n  for (let col = 0; col < 8; col++) {\n    board[1][col] = { type: \"pawn\", color: \"black\" };\n  }\n  \n  // Place white pieces\n  const whitePieces: PieceType[] = [\"rook\", \"knight\", \"bishop\", \"queen\", \"king\", \"bishop\", \"knight\", \"rook\"];\n  whitePieces.forEach((piece, col) => {\n    board[7][col] = { type: piece, color: \"white\" };\n  });\n  for (let col = 0; col < 8; col++) {\n    board[6][col] = { type: \"pawn\", color: \"white\" };\n  }\n  \n  return board;\n};\n\nexport default function ChessGame() {\n  const [board, setBoard] = useState<Board>(createInitialBoard);\n  const [currentPlayer, setCurrentPlayer] = useState<PieceColor>(\"white\");\n  const [selectedSquare, setSelectedSquare] = useState<Position | null>(null);\n  const [possibleMoves, setPossibleMoves] = useState<Position[]>([]);\n  const [error, setError] = useState<string>(\"\");\n  const [gameStatus, setGameStatus] = useState<string>(\"White to move\");\n\n  const isValidPosition = (row: number, col: number): boolean => {\n    return row >= 0 && row < 8 && col >= 0 && col < 8;\n  };\n\n  const getPossibleMoves = (fromRow: number, fromCol: number): Position[] => {\n    const piece = board[fromRow][fromCol];\n    if (!piece || piece.color !== currentPlayer) return [];\n\n    const moves: Position[] = [];\n    \n    // Simplified move generation for demonstration\n    // In a full chess implementation, this would include all piece-specific rules\n    switch (piece.type) {\n      case \"pawn\":\n        const direction = piece.color === \"white\" ? -1 : 1;\n        const newRow = fromRow + direction;\n        \n        // Forward move\n        if (isValidPosition(newRow, fromCol) && !board[newRow][fromCol]) {\n          moves.push({ row: newRow, col: fromCol });\n          \n          // Double move from starting position\n          const startRow = piece.color === \"white\" ? 6 : 1;\n          if (fromRow === startRow && !board[newRow + direction][fromCol]) {\n            moves.push({ row: newRow + direction, col: fromCol });\n          }\n        }\n        \n        // Diagonal captures\n        [-1, 1].forEach(colOffset => {\n          const captureCol = fromCol + colOffset;\n          if (isValidPosition(newRow, captureCol)) {\n            const target = board[newRow][captureCol];\n            if (target && target.color !== piece.color) {\n              moves.push({ row: newRow, col: captureCol });\n            }\n          }\n        });\n        break;\n        \n      case \"rook\":\n        // Horizontal and vertical moves\n        const directions = [[0, 1], [0, -1], [1, 0], [-1, 0]];\n        directions.forEach(([rowDir, colDir]) => {\n          for (let i = 1; i < 8; i++) {\n            const newRow = fromRow + rowDir * i;\n            const newCol = fromCol + colDir * i;\n            \n            if (!isValidPosition(newRow, newCol)) break;\n            \n            const target = board[newRow][newCol];\n            if (!target) {\n              moves.push({ row: newRow, col: newCol });\n            } else {\n              if (target.color !== piece.color) {\n                moves.push({ row: newRow, col: newCol });\n              }\n              break;\n            }\n          }\n        });\n        break;\n        \n      default:\n        // For other pieces, allow moves to adjacent empty squares or captures\n        for (let rowOffset = -1; rowOffset <= 1; rowOffset++) {\n          for (let colOffset = -1; colOffset <= 1; colOffset++) {\n            if (rowOffset === 0 && colOffset === 0) continue;\n            \n            const newRow = fromRow + rowOffset;\n            const newCol = fromCol + colOffset;\n            \n            if (isValidPosition(newRow, newCol)) {\n              const target = board[newRow][newCol];\n              if (!target || target.color !== piece.color) {\n                moves.push({ row: newRow, col: newCol });\n              }\n            }\n          }\n        }\n    }\n    \n    return moves;\n  };\n\n  const handleSquareClick = (row: number, col: number) => {\n    try {\n      setError(\"\");\n      \n      if (selectedSquare) {\n        // Check if this is a valid move\n        const isValidMove = possibleMoves.some(move => move.row === row && move.col === col);\n        \n        if (isValidMove) {\n          // Make the move\n          const newBoard = board.map(row => [...row]);\n          const piece = newBoard[selectedSquare.row][selectedSquare.col];\n          \n          newBoard[row][col] = piece;\n          newBoard[selectedSquare.row][selectedSquare.col] = null;\n          \n          setBoard(newBoard);\n          setCurrentPlayer(currentPlayer === \"white\" ? \"black\" : \"white\");\n          setGameStatus(`${currentPlayer === \"white\" ? \"Black\" : \"White\"} to move`);\n        } else {\n          setError(\"Invalid move! Please select a valid square.\");\n        }\n        \n        setSelectedSquare(null);\n        setPossibleMoves([]);\n      } else {\n        // Select a piece\n        const piece = board[row][col];\n        if (piece && piece.color === currentPlayer) {\n          setSelectedSquare({ row, col });\n          setPossibleMoves(getPossibleMoves(row, col));\n        } else if (piece) {\n          setError(\"It's not your turn! Select your own piece.\");\n        } else {\n          setError(\"No piece on this square! Select a piece to move.\");\n        }\n      }\n    } catch (err) {\n      setError(\"An error occurred during the move.\");\n      console.error(\"Chess game error:\", err);\n    }\n  };\n\n  const resetGame = () => {\n    try {\n      setBoard(createInitialBoard());\n      setCurrentPlayer(\"white\");\n      setSelectedSquare(null);\n      setPossibleMoves([]);\n      setError(\"\");\n      setGameStatus(\"White to move\");\n    } catch (err) {\n      setError(\"An error occurred while resetting the game.\");\n      console.error(\"Reset chess game error:\", err);\n    }\n  };\n\n  const isSquareSelected = (row: number, col: number): boolean => {\n    return selectedSquare?.row === row && selectedSquare?.col === col;\n  };\n\n  const isSquarePossibleMove = (row: number, col: number): boolean => {\n    return possibleMoves.some(move => move.row === row && move.col === col);\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4\">\n      <Card>\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-bold\">Chess</CardTitle>\n          <p className=\"text-muted-foreground\">\n            The ultimate strategy game. Click a piece to select it, then click a highlighted square to move.\n          </p>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Game Status */}\n          <div className=\"text-center\">\n            <p className=\"text-lg font-semibold text-foreground\">\n              {gameStatus}\n            </p>\n            {error && (\n              <p className=\"text-destructive text-sm mt-2 bg-destructive/10 p-2 rounded\">\n                {error}\n              </p>\n            )}\n          </div>\n\n          {/* Chess Board */}\n          <div className=\"mx-auto max-w-lg\">\n            <div className=\"grid grid-cols-8 gap-0 border-2 border-border rounded-lg overflow-hidden\">\n              {board.map((row, rowIndex) =>\n                row.map((piece, colIndex) => {\n                  const isLight = (rowIndex + colIndex) % 2 === 0;\n                  const isSelected = isSquareSelected(rowIndex, colIndex);\n                  const isPossibleMove = isSquarePossibleMove(rowIndex, colIndex);\n                  \n                  return (\n                    <button\n                      key={`${rowIndex}-${colIndex}`}\n                      onClick={() => handleSquareClick(rowIndex, colIndex)}\n                      className={cn(\n                        \"aspect-square w-full h-12 sm:h-16 flex items-center justify-center text-2xl sm:text-3xl\",\n                        \"transition-all duration-200 hover:brightness-110\",\n                        isLight ? \"bg-amber-100 hover:bg-amber-200\" : \"bg-amber-800 hover:bg-amber-700\",\n                        isSelected && \"ring-4 ring-blue-500 ring-inset\",\n                        isPossibleMove && \"ring-4 ring-green-500 ring-inset bg-green-200/50\"\n                      )}\n                    >\n                      {piece && PIECE_SYMBOLS[piece.color][piece.type]}\n                    </button>\n                  );\n                })\n              )}\n            </div>\n            \n            {/* Board coordinates */}\n            <div className=\"flex justify-between mt-2 px-1 text-xs text-muted-foreground\">\n              {[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"].map(letter => (\n                <span key={letter} className=\"w-12 sm:w-16 text-center\">{letter}</span>\n              ))}\n            </div>\n          </div>\n\n          {/* Game Controls */}\n          <div className=\"flex justify-center space-x-4\">\n            <Button onClick={resetGame} variant=\"outline\">\n              New Game\n            </Button>\n          </div>\n\n          {/* Game Rules */}\n          <div className=\"text-sm text-muted-foreground bg-muted/30 p-4 rounded-lg\">\n            <h4 className=\"font-semibold mb-2\">How to Play:</h4>\n            <ul className=\"space-y-1\">\n              <li>• Click on your piece to select it (highlighted in blue)</li>\n              <li>• Valid moves will be highlighted in green</li>\n              <li>• Click on a green square to move your piece</li>\n              <li>• White moves first, then players alternate turns</li>\n              <li>• Capture opponent pieces by moving to their square</li>\n            </ul>\n            <p className=\"mt-2 text-xs\">\n              <strong>Note:</strong> This is a simplified chess implementation for demonstration. \n              Full chess rules like castling, en passant, and checkmate detection are not implemented.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 701, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Navbar.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { cn } from \"@/lib/utils\";\n\nconst navigation = [\n  { name: \"Home\", href: \"/\" },\n  { name: \"Tic Tac Toe\", href: \"/tictactoe\" },\n  { name: \"Chess\", href: \"/chess\" },\n  { name: \"Ludo\", href: \"/ludo\" },\n];\n\nexport default function Navbar() {\n  const pathname = usePathname();\n\n  return (\n    <nav className=\"border-b border-border bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex h-16 items-center justify-between\">\n          <div className=\"flex items-center\">\n            <Link href=\"/\" className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 rounded-lg bg-primary flex items-center justify-center\">\n                <span className=\"text-primary-foreground font-bold text-lg\">G</span>\n              </div>\n              <span className=\"font-bold text-xl text-foreground\">GameNest</span>\n            </Link>\n          </div>\n          \n          <div className=\"hidden md:block\">\n            <div className=\"ml-10 flex items-baseline space-x-4\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={cn(\n                    \"px-3 py-2 rounded-md text-sm font-medium transition-colors\",\n                    pathname === item.href\n                      ? \"bg-primary text-primary-foreground\"\n                      : \"text-muted-foreground hover:text-foreground hover:bg-accent\"\n                  )}\n                >\n                  {item.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden\">\n            <div className=\"flex flex-col space-y-1\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={cn(\n                    \"px-3 py-2 rounded-md text-xs font-medium transition-colors\",\n                    pathname === item.href\n                      ? \"bg-primary text-primary-foreground\"\n                      : \"text-muted-foreground hover:text-foreground hover:bg-accent\"\n                  )}\n                >\n                  {item.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,aAAa;IACjB;QAAE,MAAM;QAAQ,MAAM;IAAI;IAC1B;QAAE,MAAM;QAAe,MAAM;IAAa;IAC1C;QAAE,MAAM;QAAS,MAAM;IAAS;IAChC;QAAE,MAAM;QAAQ,MAAM;IAAQ;CAC/B;AAEc,SAAS;;IACtB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;;8CACvB,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAK,WAAU;kDAA4C;;;;;;;;;;;8CAE9D,6LAAC;oCAAK,WAAU;8CAAoC;;;;;;;;;;;;;;;;;kCAIxD,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;sCACZ,WAAW,GAAG,CAAC,CAAC,qBACf,6LAAC,+JAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8DACA,aAAa,KAAK,IAAI,GAClB,uCACA;8CAGL,KAAK,IAAI;mCATL,KAAK,IAAI;;;;;;;;;;;;;;;kCAgBtB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;sCACZ,WAAW,GAAG,CAAC,CAAC,qBACf,6LAAC,+JAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8DACA,aAAa,KAAK,IAAI,GAClB,uCACA;8CAGL,KAAK,IAAI;mCATL,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBhC;GA1DwB;;QACL,qIAAA,CAAA,cAAW;;;KADN","debugId":null}}]
}